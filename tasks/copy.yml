---

- debug: msg="fp_synchronize_default = {{ fp_synchronize_default }}"
  when:
    - freebsd_postinstall_debug
  tags: fp_synchronize_default

- name: Check existence of {{ role_path }}/{{ freebsd_postinstall_copy_dir }}/default
  local_action: >
    stat path="{{ role_path }}/{{ freebsd_postinstall_copy_dir }}/default"
  register: default_copy
  tags: fp_synchronize_default
  # NOTE: playbooks directory IS NOT local_action modules current
  # working directory. Absolute path role_path is needed.

- debug: msg="Directory default exists."
  when:
    - freebsd_postinstall_debug
    - default_copy.stat.isdir is defined and default_copy.stat.isdir
  tags: fp_synchronize_default

- name: Synchronize default files {{ freebsd_postinstall_copy_dir }}/default (relative to playbooks directory)
  synchronize: >
    src="{{ freebsd_postinstall_copy_dir }}/default/"
    dest="/"
    checksum="yes"
    times="no"
    perms="no"
    owner="no"
    group="no"
    delete="{{ fp_synchronize_delete }}"
  when:
    - default_copy.stat.exists
    - fp_synchronize_default|lower == "yes"
  tags: fp_synchronize_default

- debug: msg="fp_synchronize_optional = {{ fp_synchronize_optional }}"
  when:
    - freebsd_postinstall_debug
  tags: fp_synchronize_optional

- name: Check existence of {{ role_path }}/{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}
  local_action: >
    stat path="{{ role_path }}/{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}"
  register: optional_copy
  tags: fp_synchronize_optional

- debug: msg="Directory {{ rc_conf_hostname }} exists."
  when:
    - freebsd_postinstall_debug
    - optional_copy.stat.isdir is defined and optional_copy.stat.isdir
  tags: fp_synchronize_optional

- name: Synchronize host specific files {{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }} (relative to playbooks directory)
  synchronize: >
    src="{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}/"
    dest="/"
    checksum="yes"
    times="no"
    perms="no"
    owner="no"
    group="no"
    delete="{{ fp_synchronize_delete }}"
  when:
    - optional_copy.stat.exists
    - fp_synchronize_optional|lower == "yes"
  tags: fp_synchronize_optional

- name: Check existence of {{ role_path }}/{{ freebsd_postinstall_copy_dir }}/default.tar
  local_action: >
    stat path="{{ role_path }}/{{ freebsd_postinstall_copy_dir }}/default.tar"
  register: default_copy
  tags: fp_unarchive_default

- name: Untar default files {{ freebsd_postinstall_copy_dir }}/default.tar (relative to playbooks directory)
  unarchive: >
    src="{{ freebsd_postinstall_copy_dir }}/default.tar"
    dest="/"
    keep_newer="{{ fp_unarchive_keep_newer }}"
  when:
    - default_copy.stat.exists
    - fp_synchronize_default|lower == "yes"
  tags: fp_unarchive_default

- name: Check existence of {{ role_path }}/{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}.tar
  local_action: >
    stat path="{{ role_path }}/{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}.tar"
  register: optional_copy
  tags: fp_unarchive_optional

- name: Untar host specific files {{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}.tar (relative to playbooks directory)
  unarchive: >
    src="{{ freebsd_postinstall_copy_dir }}/{{ rc_conf_hostname }}.tar"
    dest="/"
    keep_newer="{{ fp_unarchive_keep_newer }}"
  when:
    - optional_copy.stat.exists
    - fp_synchronize_optional|lower == "yes"
  tags: fp_unarchive_optional

# EOF
...
