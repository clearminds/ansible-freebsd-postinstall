---
# handlers for freebsd-postinstall

- name: set hostname
  command: hostname "{{rc_conf_hostname}}"

- name: enable ntpdate
  service: name="ntpdate" enabled="yes"
- name: disable ntpdate
  service: name="ntpdate" enabled="no"

# update the local time CMOS clock and kernel machdep.adjkerntz
# variable when timezone changes occur
- name: adjust CMOS
  command: adjkerntz -a

# sshd
- name: enable and start sshd
  service: name="sshd" state="started" enabled="yes"
- name: disable and stop sshd
  service: name="sshd" state="stopped" enabled="no"
- name: restart sshd
  service: name="sshd" state="restarted"
- name: reload sshd
  service: name="sshd" state="reloaded"

# ntpd
- name: enable and start ntpd
  service: name="ntpd" state="started" enabled="yes"
- name: disable and stop ntpd
  service: name="ntpd" state="stopped" enabled="no"
- name: restart ntpd
  service: name="ntpd" state="restarted"

# smartd
- name: enable and start smartd
  service: name="smartd" state="started" enabled="yes"
  when: freebsd_postinstall_smartd_install == "YES"
- name: disable and stop smartd
  service: name="smartd" state="stopped" enabled="no"
  when: freebsd_postinstall_smartd_install == "YES"
- name: restart smartd
  service: name="smartd" state="restarted"
  when: freebsd_postinstall_smartd_install == "YES"
- name: reload smartd
  service: name="smartd" state="reloaded"
  when: freebsd_postinstall_smartd_install == "YES"

# hostapd
- name: enable and start hostapd
  service: name="hostapd" state="started" enabled="yes"
  when: freebsd_postinstall_hostapd_install == "YES"
- name: disable and stop hostapd
  service: name="hostapd" state="stopped" enabled="no"
  when: freebsd_postinstall_hostapd_install == "YES"
- name: restart hostapd
  service: name="hostapd" state="restarted"
  when: freebsd_postinstall_hostapd_install == "YES"
- name: reload hostapd
  service: name="hostapd" state="reloaded"
  when: freebsd_postinstall_hostapd_install == "YES"

# fstab
- name: mount all
  command: mount -a

# sysctl
- name: reload sysctl
  service: name="sysctl" state="reloaded"

# swap
- name: create and mount swap
  shell: sh -c 'dd if=/dev/zero of={{freebsd_postinstall_swap_file}} bs=1m count={{freebsd_postinstall_swap_size}}; chmod 0600 {{freebsd_postinstall_swap_file}}; swapon -aL'

- name: change and mount swap
  shell: sh -c 'swapoff /dev/{{freebsd_postinstall_swap_md}}; mdconfig -du {{freebsd_postinstall_swap_md}}; dd if=/dev/zero of={{freebsd_postinstall_swap_file}} bs=1m count={{freebsd_postinstall_swap_size}}; chmod 0600 {{freebsd_postinstall_swap_file}}; swapon -aL'
# TODO: swap is created and mounted, but handler failed.
# RUNNING HANDLER [vbotka.ansible-freebsd-postinstall : create and mount swap] ***
# fatal: []: FAILED! => {"changed": true, "cmd": "sh -c 'dd if=/dev/zero of=/usr/swap0 bs=1m count=4096; chmod 0600 /us# r/swap0; swapon -aL'", "delta": "0:00:17.152136", "end": "2016-09-23 04:13:30.258551", "failed": true, "rc": 1, "start": "2016-09-2# 3 04:13:13.106415", "stderr": "4096+0 records in\n4096+0 records out\n4294967296 bytes transferred in 17.075478 secs (251528381 byt# es/sec)", "stdout": "swapon: adding /dev/md99 as swap device", "stdout_lines": ["swapon: adding /dev/md99 as swap device"], "warnin# gs": []}

# EOF
